function Pizza() {
    console.time();
    let arr = ['0000011111', '0011111111', '0100000000', '0010101000', '0001000000', '0010001110', '0110000001', '1011010111', '1001000100', '1000000000', '0110100000', '1010110101', '1110111111', '0010100001', '1101011111', '0010011001', '0100010000', '0111111100', '1010000100', '1100010010', '1011001000', '0111110111', '1000000100', '0000011100', '0100000101', '0011000000', '0000100001', '0010001000', '1111111111', '1000000001', '0010000000', '0100010010', '0000010010', '0111111111', '0100101001', '1111111111', '0000000110', '0000001000', '0100110011', '0000000010', '0000001001', '0010000010', '1000000000', '1000000000', '0000000011', '0000110000', '0001000100', '1110111111', '1101001001', '0010000000', '0000110000', '0100000000', '1010000111', '1000000000', '0000000110', '0100001001', '0010010000', '0000001000', '1000000000', '0010001000', '0100101001', '0100011001', '0000010000', '0100000000', '0111110010', '0000011100', '0000001100', '0000010000', '0100000000', '0010010000', '1000100000', '0010000110', '1100111001', '1010111100', '0000000001', '1000000000', '0000001001', '0001000000', '0000000011', '0010000010', '0001010000', '0000011000', '1000000000', '0100000000', '0100000000', '0000000010', '1101100111', '0000001000', '0000010000', '1000000101', '0110010000', '0000101001', '0000000101', '1111111111', '0000100000', '0000100010', '0100000000', '1111111111', '0000010000', '0100000110', '1000010000', '0000100100', '0000000100', '0000100000', '0001000100', '0100001100', '0100000010', '0100001000', '0100101101', '0100001000', '0000100000', '1101010001', '1100000000', '1101100001', '0001100000', '0010000010', '0011000000', '0000011010', '0001000000', '1000010000', '1111010100', '1101000000', '1000000000', '0101000010', '0000001010', '0000010000', '0000000010', '1000000000', '0101000000', '0000001100', '0001000000', '0001000000', '1000010000', '0010000000', '0000000100', '0001000000', '0001000010', '0000010000', '0101000000', '0000001011', '0000000100', '0111001110', '0000000001', '0000001000', '0100000001', '0010000000', '0000100000', '1100010100', '0001100000', '1000100010', '0100000000', '1000100000', '1010000000', '0000010001', '0011101111', '0111001100', '0010111110', '0000000100', '1000111110', '0011010000', '1000001000', '0001000000', '0000100101', '1001000100', '0000001010', '0111111111', '1000110011', '0000000100', '0000001000', '0000000010', '0110110101', '0100000000', '0000010100', '0000000001', '1010000000', '0000101110', '0000000100', '1001000010', '0000001000', '0010000000', '1001100000', '1000101100', '0011101011', '0001000000', '0000001000', '0000010010', '0000000110', '0110001001', '0110000100', '1111110010', '1111111111', '0100000000', '0100000011', '0011100100', '0100000000', '0100000100', '1111111111', '1111111111', '1000000010', '0100111000', '0110000000', '1000100100', '0000000001', '0001000101', '0000011000', '0100000000', '0000010000', '0110000000', '0101001001', '0000010000', '0111011000', '0000010000', '1110110101', '1111000101', '0000100110', '0000000100', '0010000000', '0000000110', '0011000010', '0000101011', '0010000000', '0101111000', '1000000000', '1000000000', '0000100000', '1000000011', '0100000001', '1000000000', '0001000000', '0000100000', '0100000011', '1101000001', '0001000000', '1000100000', '0001111100', '0000111000', '1010110000', '0100000010', '0000000010', '0010000000', '0001100110', '0000000001', '0000101100', '0010000000', '1000000001', '0101000000', '0100000000', '0000011000', '1000000000', '0101001001', '0000100000', '0010001000', '1111111111', '0000001000', '0000100001', '0100000000', '1111101101', '0000000010', '1100000101', '0010010000', '0000000100', '1001100101', '0000000010', '0000010101', '1111000010', '0000000001', '1011010011', '0100100000', '0010000101', '0000001100', '0001000000', '1010100001', '0000100000', '0001111000', '0001010000', '0001000000', '1001000100', '1001000101', '0100000110', '1111111001', '0000000011', '0001000000', '0001010000', '0000101001', '0110000000', '0000000011', '1111111111', '0100000000', '1010001001', '0010010000', '0010000000', '0000010000', '1000110001', '0000001000', '0001001100', '0010000001', '0000010000', '0000000001', '1011000101', '1101101111', '1111011111', '0101101101', '0010010001', '0000001000', '0000101000', '0000000001', '1101101111', '0000100010', '0000010000', '0000000001', '0110100101', '0100100101', '0000000001', '0001000000', '0000000010', '1011111110', '0001000000', '0000001000', '0000001000', '0110001111', '1100010010', '0010000000', '1110111110', '0000000010', '1011000100', '1000010000', '1111101111', '0000100000', '1010000001', '1011110000', '1101111110', '0000000100', '0000000101', '1111111111', '1101011011', '0000000010', '0010000101', '1110001110', '0000001000', '0100000010', '0001000000', '0100000100', '0000000001', '0000000010', '0000001000', '0101010000', '0000001000', '0001000100', '0101000001', '0010000000', '0011110001', '1000100001', '0110110111', '0010011000', '0000001000', '0001000000', '0100010011', '0100000000', '1011011110', '0010100000', '1100000110', '0000110000', '0011000100', '0000010001', '1001000100', '0010100000', '1000000000', '0101010001', '0000000100', '1111111111', '0100000000', '1000011101', '0100000100', '0000001001', '0000000010', '0000100101', '1100100110', '0010100000', '0100000001', '1000100000', '0000100000', '0000000001', '0000000001', '0001000000', '1000100100', '0101110000', '0000010000', '1001001100', '0100000011', '0000001000', '0010100000', '1000000110', '1010000001', '0000010000', '0000011010', '1000000010', '0010111000', '0001001100', '0010000000', '1100000100', '0000011100', '0010001000', '0000100000', '0110000100', '0000010000', '0100011010', '1000000000', '0001100001', '0000000100', '1100110000', '0100111110', '0000000110', '1001000010', '0010000000', '1011011110', '0000000100', '0000001000', '0000000100', '0001000000', '1100100100', '1111111111', '1110111011', '1010100000', '1111111111', '1100000010', '0000100001', '0000000001', '1000100100', '0001000000', '1001000010', '1010010001', '1000000110', '0000100100', '1001010100', '1110101000', '1000000000', '0000100000', '0000001110', '1000000110', '0000100111', '0010000000', '1111111111', '1000100010', '1110011001', '1000100010', '0110011000', '0000100001', '1000100100', '1100101001', '0100010010', '0100100000', '0011110001', '0011011001', '0000001001', '1110110111', '0101101000', '1000000000', '0000000100', '0000000001', '1010100000', '0000000011', '0000110000', '0101111100', '0001111010', '0000100000', '0000000010', '0010000000', '0000101001', '0001001000', '0001000000', '0000000010', '0000001000', '1010000010', '0100100110', '0001101000', '1100110001', '0001000000', '0000000001', '0000010000', '0000100000', '0000100000', '0000000001', '1111110111', '1000000000', '1111100001', '0000000100', '0010101110', '0000010000', '0100000000', '1000000000', '1001000000', '0000010000', '1111011010', '0000000001', '0100100000', '1111010001', '0000000010', '1100001000', '0010011001', '0101100100', '0000000000']
    // let arr = ['00000111', '00111000', '01001010','00111000' ,'01100000'];
    let newArr = [];
    arr.sort(); // [7,56,56,74,96]
    arr = arr.filter((item,index ) => {
        return item !== arr[index+1];
    }) // [7,56,74,96]
    arr = arr.filter((item,index) => {
       return stringSimilarity(item,arr[index+1]) <= 0.5;
    })
    console.log(arr);
    // for(let i = 0; i < arr.length; i++ ) {
    //     for(let j = i+1; j < arr.length; j++) {
    //         for(let k = j+1; k < arr.length; k++) {
    //             for(let s = k+1; s < arr.length;s++) {
    //                 newArr.push([parseInt(arr[i],2), parseInt(arr[j],2),parseInt(arr[k],2)],parseInt(arr[s],2));
    //             }
                
               
    //         }
                
    //     }
    
    // }
    // let bitArr = newArr.map((item) => {
    //     let sol = item[0];
    //     for(let i = 1; i < item.length; i++) {
    //         sol = sol | item[i];
            
    //     }
    //     return sol;
    // })

    // bitArr = bitArr.map((item) => {
    //     return decToBi(item);
    // })
    // bitArr = bitArr.map((item) => {
    //     return count(item);
    // })
    // bitArr.sort((a,b) => {
    //     return b-a;
    // })
    // console.log(oneArr[0]);
    // console.timeEnd();
    // return true;
}

function decToBi(dec) {
    return (dec >>> 0).toString(2)
}

function count(str) {
    let arr = str.split('');
    let count = 0;
    for(let i = 0; i < arr.length; i++) {
        if(arr[i] === "1") {
            count +=1;
        }
    }
    return count;
}
//Similarity 
// function similarity(s1, s2) {
//     var longer = s1;
//     var shorter = s2;
//     if (s1.length < s2.length) {
//       longer = s2;
//       shorter = s1;
//     }
//     var longerLength = longer.length;
//     if (longerLength == 0) {
//       return 1.0;
//     }
//     return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);
//   }


//   function editDistance(s1, s2) {
//     s1 = s1.toLowerCase();
//     s2 = s2.toLowerCase();
  
//     var costs = new Array();
//     for (var i = 0; i <= s1.length; i++) {
//       var lastValue = i;
//       for (var j = 0; j <= s2.length; j++) {
//         if (i == 0)
//           costs[j] = j;
//         else {
//           if (j > 0) {
//             var newValue = costs[j - 1];
//             if (s1.charAt(i - 1) != s2.charAt(j - 1))
//               newValue = Math.min(Math.min(newValue, lastValue),
//                 costs[j]) + 1;
//             costs[j - 1] = lastValue;
//             lastValue = newValue;
//           }
//         }
//       }
//       if (i > 0)
//         costs[s2.length] = lastValue;
//     }
//     return costs[s2.length];
//   }